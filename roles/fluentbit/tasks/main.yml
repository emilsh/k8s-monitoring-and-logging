---
- name: Install dependencies
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
  become: yes

- name: Add FluentBit repository key
  ansible.builtin.apt_key:
    url: https://packages.fluentbit.io/fluentbit.key
    state: present

- name: Add FluentBit repository
  ansible.builtin.apt_repository:
    repo: "deb https://packages.fluentbit.io/ubuntu/focal focal main"
    state: present
  become: yes

- name: Install FluentBit
  ansible.builtin.apt:
    name: td-agent-bit
    state: present
  become: yes

- name: Create FluentBit user and group
  ansible.builtin.group:
    name: "{{ fluentbit_group }}"
    state: present

- name: Create FluentBit user
  ansible.builtin.user:
    name: "{{ fluentbit_user }}"
    group: "{{ fluentbit_group }}"
    shell: /usr/sbin/nologin
    state: present

- name: Create directories for FluentBit
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ fluentbit_user }}"
    group: "{{ fluentbit_group }}"
    mode: '0755'
  loop:
    - "{{ fluentbit_conf_dir }}"
    - "{{ fluentbit_log_dir }}"

- name: Copy FluentBit configuration
  ansible.builtin.template:
    src: fluent-bit.conf.j2
    dest: "{{ fluentbit_conf_dir }}/fluent-bit.conf"
    owner: "{{ fluentbit_user }}"
    group: "{{ fluentbit_group }}"
    mode: '0644'

- name: Copy FluentBit parsers configuration
  ansible.builtin.template:
    src: parsers.conf.j2
    dest: "{{ fluentbit_conf_dir }}/parsers.conf"
    owner: "{{ fluentbit_user }}"
    group: "{{ fluentbit_group }}"
    mode: '0644'

- name: Copy ElasticSearch output configuration
  ansible.builtin.template:
    src: output-elasticsearch.conf.j2
    dest: "{{ fluentbit_conf_dir }}/output-elasticsearch.conf"
    owner: "{{ fluentbit_user }}"
    group: "{{ fluentbit_group }}"
    mode: '0644'

- name: Deploy FluentBit systemd service file
  ansible.builtin.copy:
    src: fluentbit.service
    dest: /etc/systemd/system/fluentbit.service
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes

- name: Enable and start FluentBit service
  ansible.builtin.systemd:
    name: "{{ fluentbit_service_name }}"
    enabled: true
    state: started
  become: yes

- name: Restart FluentBit service if configuration changes
  ansible.builtin.systemd:
    name: "{{ fluentbit_service_name }}"
    state: restarted
    when: ansible_fluentbit_config_changed
  become: yes
